{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { ViewPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from \"./TextTrackType\";\nimport FilterType from \"./FilterType\";\nimport DRMType from \"./DRMType\";\nimport VideoResizeMode from \"./VideoResizeMode.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nexport { TextTrackType, FilterType, DRMType };\nvar Video = function (_Component) {\n  _inherits(Video, _Component);\n  var _super = _createSuper(Video);\n  function Video(props) {\n    var _this;\n    _classCallCheck(this, Video);\n    _this = _super.call(this, props);\n    _this.seek = function (time) {\n      var tolerance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      if (isNaN(time)) {\n        throw new Error('Specified time is not a number');\n      }\n      if (Platform.OS === 'ios') {\n        _this.setNativeProps({\n          seek: {\n            time: time,\n            tolerance: tolerance\n          }\n        });\n      } else {\n        _this.setNativeProps({\n          seek: time\n        });\n      }\n    };\n    _this.presentFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: true\n      });\n    };\n    _this.dismissFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: false\n      });\n    };\n    _this.save = function () {\n      var _ref = _asyncToGenerator(function* (options) {\n        return yield NativeModules.VideoManager.save(options, findNodeHandle(_this._root));\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    _this.restoreUserInterfaceForPictureInPictureStopCompleted = function (restored) {\n      _this.setNativeProps({\n        restoreUserInterfaceForPIPStopCompletionHandler: restored\n      });\n    };\n    _this._assignRoot = function (component) {\n      _this._root = component;\n    };\n    _this._hidePoster = function () {\n      if (_this.state.showPoster) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n    };\n    _this._onLoadStart = function (event) {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart(event.nativeEvent);\n      }\n    };\n    _this._onLoad = function (event) {\n      if (Platform.OS === 'windows') {\n        _this._hidePoster();\n      }\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n    };\n    _this._onError = function (event) {\n      if (_this.props.onError) {\n        _this.props.onError(event.nativeEvent);\n      }\n    };\n    _this._onProgress = function (event) {\n      if (_this.props.onProgress) {\n        _this.props.onProgress(event.nativeEvent);\n      }\n    };\n    _this._onBandwidthUpdate = function (event) {\n      if (_this.props.onBandwidthUpdate) {\n        _this.props.onBandwidthUpdate(event.nativeEvent);\n      }\n    };\n    _this._onSeek = function (event) {\n      if (_this.props.onSeek) {\n        _this.props.onSeek(event.nativeEvent);\n      }\n    };\n    _this._onEnd = function (event) {\n      if (_this.props.onEnd) {\n        _this.props.onEnd(event.nativeEvent);\n      }\n    };\n    _this._onTimedMetadata = function (event) {\n      if (_this.props.onTimedMetadata) {\n        _this.props.onTimedMetadata(event.nativeEvent);\n      }\n    };\n    _this._onFullscreenPlayerWillPresent = function (event) {\n      if (_this.props.onFullscreenPlayerWillPresent) {\n        _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n      }\n    };\n    _this._onFullscreenPlayerDidPresent = function (event) {\n      if (_this.props.onFullscreenPlayerDidPresent) {\n        _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n      }\n    };\n    _this._onFullscreenPlayerWillDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerWillDismiss) {\n        _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n      }\n    };\n    _this._onFullscreenPlayerDidDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerDidDismiss) {\n        _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n      }\n    };\n    _this._onReadyForDisplay = function (event) {\n      if (!_this.props.audioOnly) {\n        _this._hidePoster();\n      }\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n    _this._onPlaybackStalled = function (event) {\n      if (_this.props.onPlaybackStalled) {\n        _this.props.onPlaybackStalled(event.nativeEvent);\n      }\n    };\n    _this._onPlaybackResume = function (event) {\n      if (_this.props.onPlaybackResume) {\n        _this.props.onPlaybackResume(event.nativeEvent);\n      }\n    };\n    _this._onPlaybackRateChange = function (event) {\n      if (_this.props.onPlaybackRateChange) {\n        _this.props.onPlaybackRateChange(event.nativeEvent);\n      }\n    };\n    _this._onExternalPlaybackChange = function (event) {\n      if (_this.props.onExternalPlaybackChange) {\n        _this.props.onExternalPlaybackChange(event.nativeEvent);\n      }\n    };\n    _this._onAudioBecomingNoisy = function () {\n      if (_this.props.onAudioBecomingNoisy) {\n        _this.props.onAudioBecomingNoisy();\n      }\n    };\n    _this._onPictureInPictureStatusChanged = function (event) {\n      if (_this.props.onPictureInPictureStatusChanged) {\n        _this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n      }\n    };\n    _this._onRestoreUserInterfaceForPictureInPictureStop = function (event) {\n      if (_this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n        _this.props.onRestoreUserInterfaceForPictureInPictureStop();\n      }\n    };\n    _this._onAudioFocusChanged = function (event) {\n      if (_this.props.onAudioFocusChanged) {\n        _this.props.onAudioFocusChanged(event.nativeEvent);\n      }\n    };\n    _this._onBuffer = function (event) {\n      if (_this.props.onBuffer) {\n        _this.props.onBuffer(event.nativeEvent);\n      }\n    };\n    _this._onGetLicense = function (event) {\n      if (_this.props.drm && _this.props.drm.getLicense instanceof Function) {\n        var data = event.nativeEvent;\n        if (data && data.spcBase64) {\n          var getLicenseOverride = _this.props.drm.getLicense(data.spcBase64, data.contentId, data.licenseUrl);\n          var getLicensePromise = Promise.resolve(getLicenseOverride);\n          getLicensePromise.then(function (result) {\n            if (result !== undefined) {\n              NativeModules.VideoManager.setLicenseResult(result, findNodeHandle(_this._root));\n            } else {\n              NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError('Empty license result', findNodeHandle(_this._root));\n            }\n          }).catch(function (error) {\n            NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(error, findNodeHandle(_this._root));\n          });\n        } else {\n          NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(\"No spc received\", findNodeHandle(_this._root));\n        }\n      }\n    };\n    _this.getViewManagerConfig = function (viewManagerName) {\n      if (!NativeModules.UIManager.getViewManagerConfig) {\n        return NativeModules.UIManager[viewManagerName];\n      }\n      return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n    };\n    _this.state = {\n      showPoster: !!props.poster\n    };\n    return _this;\n  }\n  _createClass(Video, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"toTypeString\",\n    value: function toTypeString(x) {\n      switch (typeof x) {\n        case 'object':\n          return x instanceof Date ? x.toISOString() : JSON.stringify(x);\n        case 'undefined':\n          return '';\n        default:\n          return x.toString();\n      }\n    }\n  }, {\n    key: \"stringsOnlyObject\",\n    value: function stringsOnlyObject(obj) {\n      var _this2 = this;\n      var strObj = {};\n      Object.keys(obj).forEach(function (x) {\n        strObj[x] = _this2.toTypeString(obj[x]);\n      });\n      return strObj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resizeMode = this.props.resizeMode;\n      var source = resolveAssetSource(this.props.source) || {};\n      var shouldCache = !source.__packager_asset;\n      var uri = source.uri || '';\n      if (uri && uri.match(/^\\//)) {\n        uri = \"file://\" + uri;\n      }\n      if (!uri) {\n        console.warn('Trying to load empty source.');\n      }\n      var isNetwork = !!(uri && uri.match(/^https?:/));\n      var isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n      var nativeResizeMode;\n      var RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n      if (resizeMode === VideoResizeMode.stretch) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n      } else if (resizeMode === VideoResizeMode.contain) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n      } else if (resizeMode === VideoResizeMode.cover) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n      } else {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n      }\n      var nativeProps = Object.assign({}, this.props);\n      Object.assign(nativeProps, {\n        style: [styles.base, nativeProps.style],\n        resizeMode: nativeResizeMode,\n        src: {\n          uri: uri,\n          isNetwork: isNetwork,\n          isAsset: isAsset,\n          shouldCache: shouldCache,\n          type: source.type || '',\n          mainVer: source.mainVer || 0,\n          patchVer: source.patchVer || 0,\n          requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n        },\n        onVideoLoadStart: this._onLoadStart,\n        onVideoLoad: this._onLoad,\n        onVideoError: this._onError,\n        onVideoProgress: this._onProgress,\n        onVideoSeek: this._onSeek,\n        onVideoEnd: this._onEnd,\n        onVideoBuffer: this._onBuffer,\n        onVideoBandwidthUpdate: this._onBandwidthUpdate,\n        onTimedMetadata: this._onTimedMetadata,\n        onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n        onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n        onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n        onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n        onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n        onReadyForDisplay: this._onReadyForDisplay,\n        onPlaybackStalled: this._onPlaybackStalled,\n        onPlaybackResume: this._onPlaybackResume,\n        onPlaybackRateChange: this._onPlaybackRateChange,\n        onAudioFocusChanged: this._onAudioFocusChanged,\n        onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n        onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n        onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop\n      });\n      var posterStyle = _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n        resizeMode: this.props.posterResizeMode || 'contain'\n      });\n      return _jsxs(View, {\n        style: nativeProps.style,\n        children: [_jsx(RCTVideo, _objectSpread(_objectSpread({\n          ref: this._assignRoot\n        }, nativeProps), {}, {\n          style: StyleSheet.absoluteFill\n        })), this.state.showPoster && _jsx(Image, {\n          style: posterStyle,\n          source: {\n            uri: this.props.poster\n          }\n        })]\n      });\n    }\n  }]);\n  return Video;\n}(Component);\nexport { Video as default };\nVideo.propTypes = _objectSpread({\n  filter: PropTypes.oneOf([FilterType.NONE, FilterType.INVERT, FilterType.MONOCHROME, FilterType.POSTERIZE, FilterType.FALSE, FilterType.MAXIMUMCOMPONENT, FilterType.MINIMUMCOMPONENT, FilterType.CHROME, FilterType.FADE, FilterType.INSTANT, FilterType.MONO, FilterType.NOIR, FilterType.PROCESS, FilterType.TONAL, FilterType.TRANSFER, FilterType.SEPIA]),\n  filterEnabled: PropTypes.bool,\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n  source: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string\n  }), PropTypes.number]),\n  drm: PropTypes.shape({\n    type: PropTypes.oneOf([DRMType.CLEARKEY, DRMType.FAIRPLAY, DRMType.WIDEVINE, DRMType.PLAYREADY]),\n    licenseServer: PropTypes.string,\n    headers: PropTypes.shape({}),\n    base64Certificate: PropTypes.bool,\n    certificateUrl: PropTypes.string,\n    getLicense: PropTypes.func\n  }),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: ImagePropTypes.resizeMode,\n  repeat: PropTypes.bool,\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  textTracks: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    uri: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([TextTrackType.SRT, TextTrackType.TTML, TextTrackType.VTT]),\n    language: PropTypes.string.isRequired\n  })),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  preferredForwardBufferDuration: PropTypes.number,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number\n}, ViewPropTypes);\nvar RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true\n  }\n});","map":{"version":3,"names":["React","Component","PropTypes","StyleSheet","requireNativeComponent","NativeModules","View","Image","Platform","findNodeHandle","ViewPropTypes","ImagePropTypes","resolveAssetSource","TextTrackType","FilterType","DRMType","VideoResizeMode","jsx","_jsx","jsxs","_jsxs","styles","create","base","overflow","Video","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","seek","time","tolerance","arguments","length","undefined","isNaN","Error","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","save","_ref","_asyncToGenerator","options","VideoManager","_root","_x","apply","restoreUserInterfaceForPictureInPictureStopCompleted","restored","restoreUserInterfaceForPIPStopCompletionHandler","_assignRoot","component","_hidePoster","state","showPoster","setState","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onBandwidthUpdate","onBandwidthUpdate","_onSeek","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","audioOnly","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","onPlaybackRateChange","_onExternalPlaybackChange","onExternalPlaybackChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onPictureInPictureStatusChanged","onPictureInPictureStatusChanged","_onRestoreUserInterfaceForPictureInPictureStop","onRestoreUserInterfaceForPictureInPictureStop","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","_onGetLicense","drm","getLicense","Function","data","spcBase64","getLicenseOverride","contentId","licenseUrl","getLicensePromise","Promise","resolve","then","result","setLicenseResult","setLicenseError","catch","error","getViewManagerConfig","viewManagerName","UIManager","poster","_createClass","key","value","nativeProps","toTypeString","x","Date","toISOString","JSON","stringify","toString","stringsOnlyObject","obj","_this2","strObj","Object","keys","forEach","render","resizeMode","source","shouldCache","__packager_asset","uri","match","console","warn","isNetwork","isAsset","nativeResizeMode","RCTVideoInstance","stretch","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","assign","style","src","type","mainVer","patchVer","requestHeaders","headers","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoBandwidthUpdate","onVideoAudioBecomingNoisy","onVideoExternalPlaybackChange","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","onGetLicense","posterStyle","_objectSpread","absoluteFillObject","posterResizeMode","children","RCTVideo","ref","absoluteFill","default","propTypes","filter","oneOf","NONE","INVERT","MONOCHROME","POSTERIZE","FALSE","MAXIMUMCOMPONENT","MINIMUMCOMPONENT","CHROME","FADE","INSTANT","MONO","NOIR","PROCESS","TONAL","TRANSFER","SEPIA","filterEnabled","bool","object","oneOfType","number","func","shape","string","CLEARKEY","FAIRPLAY","WIDEVINE","PLAYREADY","licenseServer","base64Certificate","certificateUrl","minLoadRetryCount","maxBitRate","repeat","automaticallyWaitsToMinimizeStalling","allowsExternalPlayback","selectedAudioTrack","isRequired","selectedVideoTrack","selectedTextTrack","textTracks","arrayOf","title","SRT","TTML","VTT","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","pictureInPicture","playInBackground","preferredForwardBufferDuration","playWhenInactive","ignoreSilentSwitch","reportBandwidth","disableFocus","controls","currentTime","fullscreenAutorotate","fullscreenOrientation","progressUpdateInterval","useTextureView","hideShutterView","needsToRestoreUserInterfaceForPictureInPictureStop","scaleX","scaleY","translateX","translateY","rotation","nativeOnly"],"sources":["D:/Facultate Anul III/SeverinReactApp/reactappn/node_modules/react-native-video/Video.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, requireNativeComponent, NativeModules, View, Image, Platform, findNodeHandle } from 'react-native';\nimport { ViewPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from './TextTrackType';\nimport FilterType from './FilterType';\nimport DRMType from './DRMType';\nimport VideoResizeMode from './VideoResizeMode.js';\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nexport { TextTrackType, FilterType, DRMType };\n\nexport default class Video extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPoster: !!props.poster,\n    };\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n\n  toTypeString(x) {\n    switch (typeof x) {\n      case 'object':\n        return x instanceof Date\n          ? x.toISOString()\n          : JSON.stringify(x); // object, null\n      case 'undefined':\n        return '';\n      default: // boolean, number, string\n        return x.toString();\n    }\n  }\n\n  stringsOnlyObject(obj) {\n    const strObj = {};\n\n    Object.keys(obj).forEach(x => {\n      strObj[x] = this.toTypeString(obj[x]);\n    });\n\n    return strObj;\n  }\n\n  seek = (time, tolerance = 100) => {\n    if (isNaN(time)) {throw new Error('Specified time is not a number');}\n\n    if (Platform.OS === 'ios') {\n      this.setNativeProps({\n        seek: {\n          time,\n          tolerance,\n        },\n      });\n    } else {\n      this.setNativeProps({ seek: time });\n    }\n  };\n\n  presentFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: true });\n  };\n\n  dismissFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: false });\n  };\n\n  save = async (options?) => {\n    return await NativeModules.VideoManager.save(options, findNodeHandle(this._root));\n  }\n\n  restoreUserInterfaceForPictureInPictureStopCompleted = (restored) => {\n    this.setNativeProps({ restoreUserInterfaceForPIPStopCompletionHandler: restored });\n  };\n\n  _assignRoot = (component) => {\n    this._root = component;\n  };\n\n  _hidePoster = () => {\n    if (this.state.showPoster) {\n      this.setState({ showPoster: false });\n    }\n  }\n\n  _onLoadStart = (event) => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart(event.nativeEvent);\n    }\n  };\n\n  _onLoad = (event) => {\n    // Need to hide poster here for windows as onReadyForDisplay is not implemented\n    if (Platform.OS === 'windows') {\n      this._hidePoster();\n    }\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n  };\n\n  _onError = (event) => {\n    if (this.props.onError) {\n      this.props.onError(event.nativeEvent);\n    }\n  };\n\n  _onProgress = (event) => {\n    if (this.props.onProgress) {\n      this.props.onProgress(event.nativeEvent);\n    }\n  };\n\n  _onBandwidthUpdate = (event) => {\n    if (this.props.onBandwidthUpdate) {\n      this.props.onBandwidthUpdate(event.nativeEvent);\n    }\n  };\n\n  _onSeek = (event) => {\n    if (this.props.onSeek) {\n      this.props.onSeek(event.nativeEvent);\n    }\n  };\n\n  _onEnd = (event) => {\n    if (this.props.onEnd) {\n      this.props.onEnd(event.nativeEvent);\n    }\n  };\n\n  _onTimedMetadata = (event) => {\n    if (this.props.onTimedMetadata) {\n      this.props.onTimedMetadata(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillPresent = (event) => {\n    if (this.props.onFullscreenPlayerWillPresent) {\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidPresent = (event) => {\n    if (this.props.onFullscreenPlayerDidPresent) {\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillDismiss = (event) => {\n    if (this.props.onFullscreenPlayerWillDismiss) {\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidDismiss = (event) => {\n    if (this.props.onFullscreenPlayerDidDismiss) {\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n    }\n  };\n\n  _onReadyForDisplay = (event) => {\n    if (!this.props.audioOnly) {\n      this._hidePoster();\n    }\n\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackStalled = (event) => {\n    if (this.props.onPlaybackStalled) {\n      this.props.onPlaybackStalled(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackResume = (event) => {\n    if (this.props.onPlaybackResume) {\n      this.props.onPlaybackResume(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackRateChange = (event) => {\n    if (this.props.onPlaybackRateChange) {\n      this.props.onPlaybackRateChange(event.nativeEvent);\n    }\n  };\n\n  _onExternalPlaybackChange = (event) => {\n    if (this.props.onExternalPlaybackChange) {\n      this.props.onExternalPlaybackChange(event.nativeEvent);\n    }\n  }\n\n  _onAudioBecomingNoisy = () => {\n    if (this.props.onAudioBecomingNoisy) {\n      this.props.onAudioBecomingNoisy();\n    }\n  };\n\n  _onPictureInPictureStatusChanged = (event) => {\n    if (this.props.onPictureInPictureStatusChanged) {\n      this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n    }\n  };\n\n  _onRestoreUserInterfaceForPictureInPictureStop = (event) => {\n    if (this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n      this.props.onRestoreUserInterfaceForPictureInPictureStop();\n    }\n  };\n\n  _onAudioFocusChanged = (event) => {\n    if (this.props.onAudioFocusChanged) {\n      this.props.onAudioFocusChanged(event.nativeEvent);\n    }\n  };\n\n  _onBuffer = (event) => {\n    if (this.props.onBuffer) {\n      this.props.onBuffer(event.nativeEvent);\n    }\n  };\n\n  _onGetLicense = (event) => {\n    if (this.props.drm && this.props.drm.getLicense instanceof Function) {\n      const data = event.nativeEvent;\n      if (data && data.spcBase64) {\n        const getLicenseOverride = this.props.drm.getLicense(data.spcBase64, data.contentId, data.licenseUrl);\n        const getLicensePromise = Promise.resolve(getLicenseOverride); // Handles both scenarios, getLicenseOverride being a promise and not.\n        getLicensePromise.then((result => {\n          if (result !== undefined) {\n            NativeModules.VideoManager.setLicenseResult(result, findNodeHandle(this._root));\n          } else {\n            NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError('Empty license result', findNodeHandle(this._root));\n          }\n        })).catch((error) => {\n          NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(error, findNodeHandle(this._root));\n        });\n      } else {\n        NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(\"No spc received\", findNodeHandle(this._root));\n      }\n    }\n  }\n  getViewManagerConfig = viewManagerName => {\n    if (!NativeModules.UIManager.getViewManagerConfig) {\n      return NativeModules.UIManager[viewManagerName];\n    }\n    return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n  };\n\n  render() {\n    const resizeMode = this.props.resizeMode;\n    const source = resolveAssetSource(this.props.source) || {};\n    const shouldCache = !source.__packager_asset;\n\n    let uri = source.uri || '';\n    if (uri && uri.match(/^\\//)) {\n      uri = `file://${uri}`;\n    }\n\n    if (!uri) {\n      console.warn('Trying to load empty source.');\n    }\n\n    const isNetwork = !!(uri && uri.match(/^https?:/));\n    const isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n\n    let nativeResizeMode;\n    const RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n    if (resizeMode === VideoResizeMode.stretch) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n    } else if (resizeMode === VideoResizeMode.contain) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n    } else if (resizeMode === VideoResizeMode.cover) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n    } else {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n    }\n\n    const nativeProps = Object.assign({}, this.props);\n    Object.assign(nativeProps, {\n      style: [styles.base, nativeProps.style],\n      resizeMode: nativeResizeMode,\n      src: {\n        uri,\n        isNetwork,\n        isAsset,\n        shouldCache,\n        type: source.type || '',\n        mainVer: source.mainVer || 0,\n        patchVer: source.patchVer || 0,\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {},\n      },\n      onVideoLoadStart: this._onLoadStart,\n      onVideoLoad: this._onLoad,\n      onVideoError: this._onError,\n      onVideoProgress: this._onProgress,\n      onVideoSeek: this._onSeek,\n      onVideoEnd: this._onEnd,\n      onVideoBuffer: this._onBuffer,\n      onVideoBandwidthUpdate: this._onBandwidthUpdate,\n      onTimedMetadata: this._onTimedMetadata,\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n      onReadyForDisplay: this._onReadyForDisplay,\n      onPlaybackStalled: this._onPlaybackStalled,\n      onPlaybackResume: this._onPlaybackResume,\n      onPlaybackRateChange: this._onPlaybackRateChange,\n      onAudioFocusChanged: this._onAudioFocusChanged,\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n      onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n      onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop,\n    });\n\n    const posterStyle = {\n      ...StyleSheet.absoluteFillObject,\n      resizeMode: this.props.posterResizeMode || 'contain',\n    };\n\n    return (\n      <View style={nativeProps.style}>\n        <RCTVideo\n          ref={this._assignRoot}\n          {...nativeProps}\n          style={StyleSheet.absoluteFill}\n        />\n        {this.state.showPoster && (\n          <Image style={posterStyle} source={{ uri: this.props.poster }} />\n        )}\n      </View>\n    );\n  }\n}\n\nVideo.propTypes = {\n  filter: PropTypes.oneOf([\n    FilterType.NONE,\n    FilterType.INVERT,\n    FilterType.MONOCHROME,\n    FilterType.POSTERIZE,\n    FilterType.FALSE,\n    FilterType.MAXIMUMCOMPONENT,\n    FilterType.MINIMUMCOMPONENT,\n    FilterType.CHROME,\n    FilterType.FADE,\n    FilterType.INSTANT,\n    FilterType.MONO,\n    FilterType.NOIR,\n    FilterType.PROCESS,\n    FilterType.TONAL,\n    FilterType.TRANSFER,\n    FilterType.SEPIA,\n  ]),\n  filterEnabled: PropTypes.bool,\n  /* Native only */\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n\n  /* Wrapper component */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n    }),\n    // Opaque type returned by require('./video.mp4')\n    PropTypes.number,\n  ]),\n  drm: PropTypes.shape({\n    type: PropTypes.oneOf([\n      DRMType.CLEARKEY, DRMType.FAIRPLAY, DRMType.WIDEVINE, DRMType.PLAYREADY\n    ]),\n    licenseServer: PropTypes.string,\n    headers: PropTypes.shape({}),\n    base64Certificate: PropTypes.bool,\n    certificateUrl: PropTypes.string,\n    getLicense: PropTypes.func,\n  }),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: ImagePropTypes.resizeMode,\n  repeat: PropTypes.bool,\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  textTracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        TextTrackType.SRT,\n        TextTrackType.TTML,\n        TextTrackType.VTT,\n      ]),\n      language: PropTypes.string.isRequired,\n    })\n  ),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  preferredForwardBufferDuration: PropTypes.number,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n\n  /* Required by react-native */\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number,\n  ...ViewPropTypes,\n};\n\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}