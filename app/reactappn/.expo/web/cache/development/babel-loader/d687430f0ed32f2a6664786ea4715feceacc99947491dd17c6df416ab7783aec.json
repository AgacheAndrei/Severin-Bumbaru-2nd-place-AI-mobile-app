{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport EyeItem from \"./components/EyeItem\";\nimport Header from \"./components/Header\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showModal = _useState2[0],\n    setShowModal = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setShowModal(!showModal);\n  };\n  var _useSpeechRecognition = useSpeechRecognition(),\n    transcript = _useSpeechRecognition.transcript,\n    listening = _useSpeechRecognition.listening,\n    resetTranscript = _useSpeechRecognition.resetTranscript,\n    browserSupportsSpeechRecognition = _useSpeechRecognition.browserSupportsSpeechRecognition;\n  SpeechRecognition.startListening({\n    continuous: true\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Modal, {\n      visible: showModal,\n      animationType: \"slide\",\n      transparent: true,\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Welcome to the EYES!\"\n          }), _jsx(Text, {\n            style: styles.modalText,\n            children: \"If you want to start the app\"\n          }), _jsx(Text, {\n            style: styles.modalText,\n            children: \"say 'OPEN'\"\n          }), _jsx(Button, {\n            title: \"Close\",\n            onPress: toggleModal\n          })]\n        })\n      })\n    }), _jsx(Header, {}), _jsx(EyeItem, {}), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  modalContent: {\n    backgroundColor: 'rgba(224,224,224, 0.75)',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  modalText: {\n    fontSize: 24,\n    fontWeight: '400',\n    textAlign: 'center',\n    marginBottom: 16\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","StyleSheet","Text","View","ImageBackground","Modal","Button","EyeItem","Header","SpeechRecognition","useSpeechRecognition","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","showModal","setShowModal","toggleModal","_useSpeechRecognition","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","startListening","continuous","style","styles","container","children","visible","animationType","transparent","modalContainer","modalContent","modalText","title","onPress","create","flex","backgroundColor","alignItems","justifyContent","padding","borderRadius","fontSize","fontWeight","textAlign","marginBottom"],"sources":["D:/Facultate Anul III/SeverinReactApp/reactappn/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useState} from 'react';\nimport { StyleSheet, Text, View, ImageBackground, Modal, Button} from 'react-native';\nimport EyeItem from './components/EyeItem';\nimport Header from './components/Header';\nimport SpeechRecognition, {\n  useSpeechRecognition\n} from \"react-speech-recognition\";\n\n\nexport default function App() {\n  \n    const [showModal, setShowModal] = useState(true);\n  \n    const toggleModal = () => {\n      setShowModal(!showModal);\n    };\n\n    const { transcript, listening ,resetTranscript,browserSupportsSpeechRecognition } = useSpeechRecognition();\n    SpeechRecognition.startListening({ continuous: true });\n    // if (!browserSupportsSpeechRecognition) {\n    //   return <Text>NU merge aici boss</Text>\n    // } \n  \n  \n  return (\n    \n    <View style={styles.container}>\n       \n       <Modal visible={showModal} animationType=\"slide\" transparent>\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text  style={styles.modalText}>Welcome to the EYES!</Text>\n          <Text  style={styles.modalText}>If you want to start the app</Text>\n          <Text  style={styles.modalText}>say 'OPEN'</Text>\n\n          <Button  title=\"Close\" onPress={toggleModal}  />\n        </View>\n      </View>\n    </Modal>\n    \n      <Header/>\n      \n      <EyeItem/>\n      \n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  // popUp:{\n  //   alignItems: 'center',\n  //   justifyContent: 'center',\n  // },\n\n  \n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  modalContent: {\n    backgroundColor: 'rgba(224,224,224, 0.75)',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  modalText: {\n    fontSize: 24,\n    fontWeight: '400',\n    textAlign: 'center',\n    marginBottom: 16,\n   \n  },\n\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}